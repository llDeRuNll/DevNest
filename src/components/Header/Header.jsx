import { useEffect, useState } from "react";
import { useSelector } from "react-redux";
import { selectIsLoggedIn } from "../../redux/auth/selectors";
import { NavLink } from "react-router-dom";
import BurgerMenuBtn from "../BurgerMenuBtn/BurgerMenuBtn.jsx";
import TransactionsHistoryNav from "../TransactionsHistoryNav/TransactionsHistoryNav.jsx";
import UserBarBtn from "../UserBarBtn/UserBarBtn.jsx";
import BurgerMenu from "../BurgerMenu/BurgerMenu";
import s from "./Header.module.css";
import clsx from "clsx";

const Header = () => {
  const isLoggedIn = useSelector(selectIsLoggedIn);
  const [isBurgerOpen, setIsBurgerOpen] = useState(false);
  const [windowWidth, setWindowWidth] = useState(window.innerWidth);

  const toggleBurger = () => {
    setIsBurgerOpen(!isBurgerOpen);
  };

  const handleOpenModal = () => {};

  useEffect(() => {
    const handleResize = () => setWindowWidth(window.innerWidth);
    window.addEventListener("resize", handleResize);
    return () => window.removeEventListener("resize", handleResize);
  }, []);

  const isMobile = windowWidth < 768;
  const isTablet = windowWidth >= 768 && windowWidth < 1440;
  const isDesktop = windowWidth >= 1440;

  return (
    <div className={`${s.headerContainer} container`}>
      <header
        className={clsx(
          s.header,
          isLoggedIn ? (isDesktop ? s.authDesktop : s.authMobile) : s.guest
        )}
      >
        <div className={s.logo}>
          <NavLink
            to={isLoggedIn ? "/transactions/expenses" : "/"}
            alt="transfer "
            aria-labelledby="logoTitle"
          >
            <svg
              width="218"
              height="24"
              viewBox="0 0 218 24"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <g clipPath="url(#clip0_71_276)">
                <path
                  d="M19.0698 15.3809C19.0174 15.2404 14.3749 6.00221 14.3051 5.86171C14.0607 5.26456 13.6244 4.75523 13.0484 4.40397C11.5998 3.56094 9.74979 4.0527 8.91204 5.51044C8.33608 6.51154 8.37099 7.68827 8.92949 8.61911C8.98185 8.74206 13.4149 17.5939 13.5022 17.7344C13.5546 17.8749 13.6244 17.9978 13.6942 18.1383C13.9385 18.7355 14.3749 19.2448 14.9508 19.5961C16.3994 20.4391 18.2495 19.9649 19.0872 18.5071C19.6806 17.5061 19.6283 16.3118 19.0698 15.3809Z"
                  fill="#0EF387"
                />
                <path
                  d="M13.712 9.12843C14.2182 8.58397 14.5323 7.84632 14.5323 7.03842C14.5323 5.36992 13.1884 4 11.5129 4C10.4832 4 9.57563 4.50933 9.03458 5.29967C8.92986 5.40505 1.40756 14.7486 1.3203 14.8716C0.814156 15.416 0.5 16.1537 0.5 16.9616C0.5 18.6476 1.86134 20 3.51939 20C4.54913 20 5.45669 19.4907 5.99774 18.7003C6.10246 18.5774 13.6422 9.25137 13.712 9.12843Z"
                  fill="#FAFAFA"
                />
                <path
                  d="M26.6797 9.12843C27.1858 8.58397 27.5 7.84632 27.5 7.03842C27.5 5.35236 26.1386 4 24.4806 4C23.4508 4 22.5433 4.50933 22.0022 5.29967C21.8975 5.40505 14.3578 14.7486 14.2705 14.8716C13.7644 15.416 13.4502 16.1537 13.4502 16.9616C13.4502 18.6476 14.8115 20 16.4696 20C17.4993 20 18.4069 19.4907 18.9479 18.7003C19.0701 18.5774 26.5924 9.25137 26.6797 9.12843Z"
                  fill="#FAFAFA"
                />
              </g>
              <path
                d="M36.7642 19V4.45455H46.5653V6.99006H39.8395V10.456H46.0611V12.9915H39.8395V16.4645H46.5938V19H36.7642ZM51.4938 4.45455L54.4271 9.41193H54.5407L57.4881 4.45455H60.9612L56.5222 11.7273L61.0606 19H57.5237L54.5407 14.0355H54.4271L51.4441 19H47.9214L52.4739 11.7273L48.0066 4.45455H51.4938ZM62.5072 19V4.45455H68.2458C69.349 4.45455 70.2889 4.66525 71.0654 5.08665C71.8419 5.50331 72.4338 6.08333 72.841 6.8267C73.2529 7.56534 73.4589 8.41761 73.4589 9.38352C73.4589 10.3494 73.2505 11.2017 72.8339 11.9403C72.4172 12.679 71.8135 13.2543 71.0228 13.6662C70.2368 14.0781 69.2851 14.2841 68.1677 14.2841H64.51V11.8196H67.6705C68.2624 11.8196 68.7501 11.7178 69.1336 11.5142C69.5219 11.3059 69.8107 11.0194 70.0001 10.6548C70.1942 10.2855 70.2913 9.86174 70.2913 9.38352C70.2913 8.90057 70.1942 8.47917 70.0001 8.11932C69.8107 7.75473 69.5219 7.47301 69.1336 7.27415C68.7453 7.07055 68.2529 6.96875 67.6563 6.96875H65.5825V19H62.5072ZM75.0564 19V4.45455H84.8575V6.99006H78.1317V10.456H84.3533V12.9915H78.1317V16.4645H84.8859V19H75.0564ZM99.0687 4.45455V19H96.4124L90.0843 9.84517H89.9778V19H86.9025V4.45455H89.6014L95.8798 13.6023H96.0076V4.45455H99.0687ZM109.1 8.63778C109.043 8.06487 108.799 7.61979 108.369 7.30256C107.938 6.98532 107.353 6.8267 106.614 6.8267C106.112 6.8267 105.689 6.89773 105.343 7.03977C104.997 7.17708 104.732 7.36884 104.548 7.61506C104.368 7.86127 104.278 8.14062 104.278 8.45312C104.268 8.71354 104.323 8.94081 104.441 9.13494C104.564 9.32907 104.732 9.49716 104.945 9.6392C105.158 9.77651 105.405 9.89725 105.684 10.0014C105.963 10.1009 106.262 10.1861 106.579 10.2571L107.886 10.5696C108.52 10.7116 109.103 10.901 109.633 11.1378C110.163 11.3745 110.622 11.6657 111.011 12.0114C111.399 12.357 111.7 12.7642 111.913 13.233C112.13 13.7017 112.242 14.2391 112.246 14.8452C112.242 15.7353 112.014 16.5071 111.565 17.1605C111.12 17.8092 110.476 18.3134 109.633 18.6733C108.795 19.0284 107.784 19.206 106.6 19.206C105.426 19.206 104.403 19.026 103.532 18.6662C102.665 18.3063 101.988 17.7737 101.501 17.0682C101.018 16.358 100.764 15.4796 100.741 14.4332H103.717C103.75 14.9209 103.889 15.3281 104.136 15.6548C104.387 15.9768 104.72 16.2206 105.137 16.3864C105.558 16.5473 106.034 16.6278 106.565 16.6278C107.085 16.6278 107.538 16.5521 107.921 16.4006C108.309 16.2491 108.61 16.0384 108.823 15.7685C109.036 15.4986 109.143 15.1884 109.143 14.8381C109.143 14.5114 109.046 14.2367 108.852 14.0142C108.662 13.7917 108.383 13.6023 108.013 13.446C107.649 13.2898 107.201 13.1477 106.671 13.0199L105.087 12.6222C103.861 12.3239 102.893 11.8575 102.183 11.223C101.472 10.5885 101.12 9.7339 101.124 8.65909C101.12 7.77841 101.354 7.009 101.827 6.35085C102.306 5.69271 102.961 5.17898 103.795 4.80966C104.628 4.44034 105.575 4.25568 106.636 4.25568C107.715 4.25568 108.657 4.44034 109.462 4.80966C110.272 5.17898 110.902 5.69271 111.352 6.35085C111.801 7.009 112.033 7.77131 112.048 8.63778H109.1ZM113.915 19V4.45455H123.716V6.99006H116.99V10.456H123.212V12.9915H116.99V16.4645H123.745V19H113.915ZM125.207 6.99006V4.45455H137.153V6.99006H132.7V19H129.66V6.99006H125.207ZM138.72 19V4.45455H144.459C145.558 4.45455 146.495 4.65104 147.272 5.04403C148.053 5.43229 148.647 5.9839 149.054 6.69886C149.466 7.40909 149.672 8.24479 149.672 9.20597C149.672 10.1719 149.464 11.0028 149.047 11.6989C148.63 12.3902 148.027 12.9205 147.236 13.2898C146.45 13.6591 145.498 13.8438 144.381 13.8438H140.539V11.3722H143.884C144.471 11.3722 144.959 11.2917 145.347 11.1307C145.735 10.9697 146.024 10.7282 146.213 10.4062C146.407 10.0843 146.505 9.68419 146.505 9.20597C146.505 8.72301 146.407 8.31581 146.213 7.98438C146.024 7.65294 145.733 7.40199 145.34 7.23153C144.952 7.05634 144.461 6.96875 143.87 6.96875H141.796V19H138.72ZM146.576 12.3807L150.191 19H146.796L143.259 12.3807H146.576ZM153.953 19H150.657L155.678 4.45455H159.641L164.656 19H161.36L157.717 7.77841H157.603L153.953 19ZM153.747 13.2827H161.531V15.6832H153.747V13.2827ZM178.157 9.54688H175.046C174.989 9.14441 174.873 8.78693 174.698 8.47443C174.523 8.1572 174.298 7.88731 174.023 7.66477C173.748 7.44223 173.431 7.27178 173.071 7.15341C172.716 7.03504 172.33 6.97585 171.914 6.97585C171.161 6.97585 170.505 7.16288 169.946 7.53693C169.388 7.90625 168.954 8.44602 168.647 9.15625C168.339 9.86174 168.185 10.7187 168.185 11.7273C168.185 12.7642 168.339 13.6354 168.647 14.3409C168.959 15.0464 169.395 15.5791 169.953 15.9389C170.512 16.2988 171.158 16.4787 171.892 16.4787C172.304 16.4787 172.685 16.4242 173.036 16.3153C173.391 16.2064 173.706 16.0478 173.98 15.8395C174.255 15.6264 174.482 15.3684 174.662 15.0653C174.847 14.7623 174.975 14.4167 175.046 14.0284L178.157 14.0426C178.076 14.7102 177.875 15.3542 177.553 15.9744C177.236 16.59 176.807 17.1416 176.267 17.6293C175.732 18.1122 175.093 18.4957 174.35 18.7798C173.611 19.0592 172.775 19.1989 171.843 19.1989C170.545 19.1989 169.385 18.9053 168.363 18.3182C167.345 17.7311 166.54 16.8812 165.948 15.7685C165.361 14.6558 165.067 13.3087 165.067 11.7273C165.067 10.1411 165.365 8.79167 165.962 7.67898C166.559 6.56629 167.368 5.71875 168.391 5.13636C169.414 4.54924 170.564 4.25568 171.843 4.25568C172.685 4.25568 173.467 4.37405 174.186 4.6108C174.911 4.84754 175.552 5.19318 176.111 5.64773C176.67 6.09754 177.124 6.64915 177.475 7.30256C177.83 7.95597 178.057 8.70407 178.157 9.54688ZM179.962 19V4.45455H183.037V10.8679H183.229L188.463 4.45455H192.149L186.752 10.9673L192.213 19H188.534L184.55 13.0199L183.037 14.8665V19H179.962ZM193.351 19V4.45455H203.152V6.99006H196.426V10.456H202.648V12.9915H196.426V16.4645H203.18V19H193.351ZM205.197 19V4.45455H210.936C212.034 4.45455 212.972 4.65104 213.748 5.04403C214.529 5.43229 215.124 5.9839 215.531 6.69886C215.943 7.40909 216.149 8.24479 216.149 9.20597C216.149 10.1719 215.94 11.0028 215.524 11.6989C215.107 12.3902 214.503 12.9205 213.713 13.2898C212.927 13.6591 211.975 13.8438 210.858 13.8438H207.015V11.3722H210.36C210.947 11.3722 211.435 11.2917 211.823 11.1307C212.212 10.9697 212.501 10.7282 212.69 10.4062C212.884 10.0843 212.981 9.68419 212.981 9.20597C212.981 8.72301 212.884 8.31581 212.69 7.98438C212.501 7.65294 212.209 7.40199 211.816 7.23153C211.428 7.05634 210.938 6.96875 210.346 6.96875H208.272V19H205.197ZM213.052 12.3807L216.667 19H213.272L209.735 12.3807H213.052Z"
                fill="#FAFAFA"
              />
              <defs>
                <clipPath id="clip0_71_276">
                  <rect
                    width="27"
                    height="16"
                    fill="white"
                    transform="translate(0.5 4)"
                  />
                </clipPath>
              </defs>
            </svg>
          </NavLink>
        </div>{" "}
        {isLoggedIn && (isMobile || isTablet) && (
          <div className={s.barsContainer}>
            <BurgerMenuBtn onClick={toggleBurger} />
            {isBurgerOpen && (
              <BurgerMenu
                onClose={toggleBurger}
                onOpenModal={handleOpenModal}
              />
            )}
          </div>
        )}
        {isLoggedIn && isDesktop && (
          <>
            <TransactionsHistoryNav />
            <UserBarBtn onOpenModal={handleOpenModal} />
          </>
        )}
      </header>
    </div>
  );
};

export default Header;
